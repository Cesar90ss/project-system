
* User Documentation

** Syscalls :

*** NAME
    halt
    SYNOPSIS
    /nachos/code/machine/halt
    DESCRIPTION
    halt is a function which power off the system.

*** NAME
    Exit
    SYNOPSIS
    void _exit(int status);
    DESCRIPTION
    The exit The parameter status use to quit the process without shutting down the machine unless there is no other process
    running it will end the all system. There is 2 kind of status value 0 is exit for normal condition and 1 is exit with error

*** NAME
    PutChar
    SYNOPSIS
    void PutChar(char c)
    DESCRIPTION
    PutChar is the function that use to write the character c to the console.

*** NAME
    GetChar
    SYNOPSIS
    int GetChar()
    DESCRIPTION
    GetChar is the function that read the character from the input buffer.
    Return the character or EOF if no more character to read.

*** NAME
    PutInt
    SYNOPSIS
    void PutInt(int i)
    DESCRIPTION
    PutInt is the function that use to write the int i to the console

*** NAME
    GetInt
    SYNOPSIS
    int GetInt(int* p)
    DESCRIPTION
    GetInt is the function that read an int from the input buffer to the p pointer adress.
    Return 0 when everything is ok, -1 when the input cannot be read as an int
    and -2 when the adress p cannot be wroten by the caller.

*** NAME
    PutString
    SYNOPSIS
    void PutString(const char s[])
    DESCRIPTION
    It writes the string to the console. If the string given is longer than
    MAX_STRING_SIZE then the remaining part is not printed in the console.

*** NAME
    GetString
    SYNOPSIS
    char *GetString(char *s, int n)
    DESCRIPTION
    It reads at most n - 1 characters in the console. return s if there is no error
    otherwise it will return NULL if there is error or EOF.

*** NAME
    UserThreadCreate
    SYNOPSIS
    int UserThreadCreate(void f(void *arg), void *arg)
    DESCRIPTION
    This function create a new thread, executing the function f with the argument arg.
    Return 0 on success, -1 if no space left

*** NAME
    UserThreadExit SYNOPSIS void UserThreadExit(void *ret) DESCRIPTION This
    function use to destroy the thread and puts the return value in ret.  When
    main thread call UserThreadExit, other threads continue to run. The last
    thread will call Exit

*** NAME
    UserThreadJoin
    SYNOPSIS
    int UserThreadJoin(int tid, void **retval)
    DESCRIPTION
    This function use to join childs threads
    Return -1 if bad tid & -2 if another thread is already joining on thread tid.
    Return 0 on success.

*** NAME
    UserSemaphoreCreate
    SYNOPSIS
    int UserSemaphoreCreate(char* name, int value)
    DESCRIPTION
    Initialize and return a semaphore with tha nama "name" and initial value "value"

*** NAME
    UserSemaphoreP
    SYNOPSIS
    int UserSemaphoreP(int id)
    DESCRIPTION
    Takes the lock on the semaphore pointed by id and return -1 if error and 0 if it works

*** NAME
    UserSemaphoreV
    SYNOPSIS
    int UserSemaphoreV(int id)
    DESCRIPTION
    Release the lock (unlock) the semaphore pointed by id and return -1 if error and 0 if it works

*** NAME
    UserSemaphoreDestroy
    SYNOPSIS
    int UserSemaphoreDestroy(int id)
    DESCRIPTION
    Destroy the semaphore pointed by id and return -1 if error and 0 if it works
